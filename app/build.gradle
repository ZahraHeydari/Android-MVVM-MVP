apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

// keystore file properties
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(rootProject.file("keystore.properties")))


android {
    compileSdkVersion rootProject.ext.compileSdkVersion as Integer
    buildToolsVersion = '28.0.3'
    defaultConfig {
        applicationId rootProject.ext.applicationId as String
        minSdkVersion rootProject.ext.minSdkVersion as Integer
        targetSdkVersion rootProject.ext.targetSdkVersion as Integer
        versionCode rootProject.ext.versionCode as Integer
        versionName rootProject.ext.versionName as String
        testInstrumentationRunner rootProject.ext.testInstrumentationRunner as String
        vectorDrawables.useSupportLibrary = true
        // Enable multiDex support.
        multiDexEnabled true


        // BUILD CONFIG FIELDS
        buildConfigField 'String', 'BASE_URL', '"https://www.themealdb.com/api/json/v1/1/"'
    }

    dexOptions {
        javaMaxHeapSize = "2g"
    }

    signingConfigs {
        config {
            storeFile file(keystoreProperties['storeFile'])
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {

        release {
            debuggable false
            minifyEnabled false
            signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            minifyEnabled false
            //signingConfig signingConfigs.config
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

androidExtensions{
    experimental = true
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"
    implementation "com.android.support:support-v4:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support:multidex:$multidexLibVersion"
    implementation "uk.co.chrisjenx:calligraphy:$calligraphyLibVersion"
    implementation "com.google.code.gson:gson:$gsonLibVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpLibVersion"
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation "com.github.adroitandroid:ChipCloud:$chipCloudLibVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitLibVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitLibVersion"
    implementation "android.arch.persistence.room:runtime:$roomCompilerLibVersion"
    implementation "android.arch.persistence.room:rxjava2:$roomCompilerLibVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidLibVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaLibVersion"
    kapt "android.arch.persistence.room:compiler:$roomCompilerLibVersion"
    debugImplementation "com.amitshekhar.android:debug-db:$debugDbVersion"
    testImplementation 'junit:junit:4.12'
}
