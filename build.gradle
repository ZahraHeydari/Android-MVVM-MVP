// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.2.61'
    ext.versionCode = 100
    ext.versionName = "1.0.0"
    ext.supportLibVersion = "28.0.0"
    ext.greenDaoSchemaVersion = 22
    ext.googleLibVersion = "15.0.1"
    ext.compileSdkVersion = 28
    ext.buildToolsVersion = "28.0.1"
    ext.targetSdkVersion = 28
    ext.minSdkVersion = 17
    ext.applicationId = "com.zest.android"
    ext.testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
    ext.junitVersion = "4.12"
    ext.calligraphyLibVersion = "2.3.0"
    ext.multidexLibVersion = "1.0.3"
    ext.retrofitLibVersion = "2.3.0"
    ext.gsonLibVersion = "2.7"
    ext.greendaoLibVersion = "3.2.2"
    ext.parcelerLibVersion = "1.1.11"
    ext.crashlyticsLibVersion = "2.9.5@aar"
    ext.okhttpLibVersion = "3.8.1"
    ext.butterknifeLibVersion = "8.8.1"
    ext.picassoVersion = "2.5.2"
    ext.debugDbVersion = "1.0.3"
    ext.chipCloudLibVersion = "2.2.1"
    ext.retrofitLibVersion = "2.4.0"
    ext.roomCompilerLibVersion = "1.1.1"

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath 'com.google.gms:google-services:4.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
        classpath 'io.fabric.tools:gradle:1.26.1'
    }
}

allprojects {
    repositories {
        jcenter()
        flatDir {
            dirs 'libs'
        }
        google()
        maven { url "https://jitpack.io" }
        maven { url 'https://maven.google.com' }
        maven { url 'https://maven.fabric.io/public' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

